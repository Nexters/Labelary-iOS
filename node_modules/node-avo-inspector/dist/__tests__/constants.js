"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.trackingEndpoint = exports.type = exports.sessionTimeMs = exports.requestMsg = exports.networkCallType = exports.mockedReturns = exports.error = exports.defaultOptions = void 0;
const AvoInspectorEnv_1 = require("../AvoInspectorEnv");
const defaultOptions = {
    apiKey: "api-key-xxx",
    env: AvoInspectorEnv_1.AvoInspectorEnv.Dev,
    version: "1",
    shouldLog: true,
    appName: "my-test-app",
};
exports.defaultOptions = defaultOptions;
const error = {
    API_KEY: "[Avo Inspector] No API key provided. Inspector can't operate without API key.",
    VERSION: "[Avo Inspector] No version provided. Many features of Inspector rely on versioning. Please provide comparable string version, i.e. integer or semantic.",
};
exports.error = error;
const mockedReturns = {
    INSTALLATION_ID: "avo-instalation-id",
    GUID: "generated-guid",
    SESSION_ID: "session-id",
};
exports.mockedReturns = mockedReturns;
const networkCallType = {
    EVENT: "event",
    SESSION_STARTED: "sessionStarted",
};
exports.networkCallType = networkCallType;
const requestMsg = {
    ERROR: "Request failed",
    TIMEOUT: "Request timed out",
};
exports.requestMsg = requestMsg;
const trackingEndpoint = "https://api.avo.app/inspector/v1/track";
exports.trackingEndpoint = trackingEndpoint;
const sessionTimeMs = 5 * 60 * 1000;
exports.sessionTimeMs = sessionTimeMs;
const type = {
    STRING: "string",
    INT: "int",
    OBJECT: "object",
    FLOAT: "float",
    LIST: "list",
    BOOL: "boolean",
    NULL: "null",
    UNKNOWN: "unknown",
};
exports.type = type;
